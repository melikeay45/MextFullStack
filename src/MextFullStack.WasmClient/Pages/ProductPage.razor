@page "/products"
@using MextFullStack.Domain.Dtos
@inject HttpClient HttpClient
@inject IToastService ToastService

<div class="mb-8 text-center">
    <h1 class="mb-4 text-4xl font-bold md:text-5xl">Our Amazing Products</h1>
    <div class="flex justify-center">
        <div class="w-32 h-1 from-blue-400 to-blue-200 bg-gradient-to-r"></div>
    </div>
    <div class="flex justify-center">
        <div class="w-24 h-1 from-blue-400 to-blue-200 bg-gradient-to-r"></div>
    </div>
</div>

<div class="card mb-4 bg-base-100 shadow-xl">
    <div class="card-body">
        <h2 class="card-title">Sort Products</h2>
        <div class="flex flex-col gap-4 md:flex-row">
            <select class="select select-primary w-full max-w-xs">
                <option disabled selected>Select sorting type</option>
                <option>Name</option>
                <option>Price</option>
                <option>Rating</option>
            </select>
            <select class="select select-primary w-full max-w-xs">
                <option disabled selected>Select sorting order</option>
                <option>Ascending</option>
                <option>Descending</option>
            </select>
        </div>
    </div>

    <div class="card-body">
        @if (Products is null)
        {
            <Loading />
        }
        else if (!Products.Any())
        {
            <div role="alert" class="alert alert-warning">
                <svg xmlns="http://www.w3.org/2000/svg" class="shrink-0 h-6 w-6 stroke-current" fill="none" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" /></svg>
                <span>There aren't any products to be shown.</span>
            </div>
        }
        else
        {
            <div class="grid-cols-1 grid justify-items-center gap-4 md:grid-cols-2 lg:grid-cols-3">

                @foreach (var product in Products)
                {
                    <div class="card w-96 bg-base-100 shadow-xl">
                        <figure><img src="https://www.apple.com/newsroom/images/product/iphone/standard/Apple_iPhone-13-Pro_Colors_09142021_big.jpg.large.jpg" alt="@product.Name" /></figure>
                        <div class="card-body">
                            <h2 class="card-title">
                                @product.Name
                                <div class="badge badge-secondary">@product.CategoryName</div>
                            </h2>
                            <p>@product.Description</p>

                            <div class="flex items-center justify-between">

                                <div class="card-actions justify-start">
                                    <button class="border-b-2 border-l-2 border-r-2 group relative m-1 inline-flex cursor-pointer items-center justify-center overflow-hidden rounded-lg border-blue-700 bg-gradient-to-tr from-blue-600 to-blue-500 px-4 py-1 text-white shadow-lg transition duration-100 ease-in-out active:translate-y-0.5 active:border-blue-600 active:shadow-none">
                                        <span class="opacity-10 absolute h-0 w-0 rounded-full bg-white transition-all duration-300 ease-out group-hover:h-32 group-hover:w-32"></span>
                                        <span class="relative font-medium">Edit</span>
                                    </button>

                                    <button @onclick="@(() => Delete(product.Id))" class="m-1 border-red-700 from-red-600 to-red-500 px-4 py-1 text-white group relative inline-flex cursor-pointer items-center justify-center overflow-hidden rounded-lg border-b-2 border-l-2 border-r-2 bg-gradient-to-tr shadow-lg transition duration-100 ease-in-out active:translate-y-0.5 active:border-red-600 active:shadow-none">
                                        <span class="opacity-10 absolute h-0 w-0 rounded-full bg-white transition-all duration-300 ease-out group-hover:h-32 group-hover:w-32"></span>
                                        <span class="relative font-medium">Delete</span>
                                    </button>
                                </div>

                                <div class="card-actions justify-end">
                                    <div class="badge badge-outline">$@product.Price</div>
                                </div>

                            </div>
                        </div>
                    </div>


                }

            </div>
        }
    </div>
</div>

@code {

    private List<ProductGetAllDto> Products = null;

    protected override async Task OnInitializedAsync()
    {
        Products = await HttpClient.GetFromJsonAsync<List<ProductGetAllDto>>("Products");
    }

    private void Delete(Guid id)
    {
        var index = Products.FindIndex(x => x.Id == id);

        if (index == -1)
            return;


        Products.RemoveAt(index);
        ToastService.ShowSuccess("The selected Product was successfully deleted.");

    }
}
